//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Be.Stateless.BizTalk.MicroPipelines
{


	public sealed class XmlTransmit : Microsoft.BizTalk.PipelineOM.SendPipeline
	{

		public XmlTransmit()
		{
			Microsoft.BizTalk.PipelineOM.Stage stage = this.AddStage(new System.Guid("9d0e4101-4cce-4536-83fa-4a5040674ad6"), Microsoft.BizTalk.PipelineOM.ExecutionMode.all);
			Microsoft.BizTalk.Component.Interop.IBaseComponent comp0 = Microsoft.BizTalk.PipelineOM.PipelineManager.CreateComponent("Be.Stateless.BizTalk.Component.FailedMessageRoutingEnablerComponent, Be.Stateless.BizTalk.Pipeline.Components, Version=2.0.0.0, Culture=neutral, PublicKeyToken=3707daa0b119fc14");
			if (comp0.GetType().IsInstanceOfType(typeof(Microsoft.BizTalk.Component.Interop.IPersistPropertyBag)))
			{
				((Microsoft.BizTalk.Component.Interop.IPersistPropertyBag)(comp0)).Load(new Microsoft.BizTalk.PipelineEditor.PropertyBag(new System.Collections.ArrayList(new Microsoft.BizTalk.PipelineEditor.PropertyContents[] {
									new Microsoft.BizTalk.PipelineEditor.PropertyContents("Enabled", true),
									new Microsoft.BizTalk.PipelineEditor.PropertyContents("EnableFailedMessageRouting", true),
									new Microsoft.BizTalk.PipelineEditor.PropertyContents("SuppressRoutingFailureReport", true)})), 0);
			}
			this.AddComponent(stage, comp0);
			Microsoft.BizTalk.Component.Interop.IBaseComponent comp1 = Microsoft.BizTalk.PipelineOM.PipelineManager.CreateComponent("Be.Stateless.BizTalk.Component.MicroPipelineComponent, Be.Stateless.BizTalk.Pipeline.Components, Version=2.0.0.0, Culture=neutral, PublicKeyToken=3707daa0b119fc14");
			if (comp1.GetType().IsInstanceOfType(typeof(Microsoft.BizTalk.Component.Interop.IPersistPropertyBag)))
			{
				((Microsoft.BizTalk.Component.Interop.IPersistPropertyBag)(comp1)).Load(new Microsoft.BizTalk.PipelineEditor.PropertyBag(new System.Collections.ArrayList(new Microsoft.BizTalk.PipelineEditor.PropertyContents[] {
									new Microsoft.BizTalk.PipelineEditor.PropertyContents("Enabled", true),
									new Microsoft.BizTalk.PipelineEditor.PropertyContents("Components", "")})), 0);
			}
			this.AddComponent(stage, comp1);
			stage = this.AddStage(new System.Guid("9d0e4107-4cce-4536-83fa-4a5040674ad6"), Microsoft.BizTalk.PipelineOM.ExecutionMode.all);
			Microsoft.BizTalk.Component.Interop.IBaseComponent comp2 = Microsoft.BizTalk.PipelineOM.PipelineManager.CreateComponent("Microsoft.BizTalk.Component.XmlAsmComp, Microsoft.BizTalk.Pipeline.Components, Version=3.0.1.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35");
			if (comp2.GetType().IsInstanceOfType(typeof(Microsoft.BizTalk.Component.Interop.IPersistPropertyBag)))
			{
				((Microsoft.BizTalk.Component.Interop.IPersistPropertyBag)(comp2)).Load(new Microsoft.BizTalk.PipelineEditor.PropertyBag(new System.Collections.ArrayList(new Microsoft.BizTalk.PipelineEditor.PropertyContents[] {
									new Microsoft.BizTalk.PipelineEditor.PropertyContents("EnvelopeDocSpecNames", ""),
									new Microsoft.BizTalk.PipelineEditor.PropertyContents("EnvelopeSpecTargetNamespaces", ""),
									new Microsoft.BizTalk.PipelineEditor.PropertyContents("DocumentSpecNames", ""),
									new Microsoft.BizTalk.PipelineEditor.PropertyContents("DocumentSpecTargetNamespaces", ""),
									new Microsoft.BizTalk.PipelineEditor.PropertyContents("XmlAsmProcessingInstructions", ""),
									new Microsoft.BizTalk.PipelineEditor.PropertyContents("ProcessingInstructionsOptions", Microsoft.BizTalk.Component.XmlAsmComp.ProcessingInstructionsOptions.Append),
									new Microsoft.BizTalk.PipelineEditor.PropertyContents("ProcessingInstructionsScope", Microsoft.BizTalk.Component.XmlAsmComp.ProcessingInstructionsScopes.Document),
									new Microsoft.BizTalk.PipelineEditor.PropertyContents("AddXmlDeclaration", true),
									new Microsoft.BizTalk.PipelineEditor.PropertyContents("TargetCharset", ""),
									new Microsoft.BizTalk.PipelineEditor.PropertyContents("TargetCodePage", 0),
									new Microsoft.BizTalk.PipelineEditor.PropertyContents("PreserveBom", true),
									new Microsoft.BizTalk.PipelineEditor.PropertyContents("HiddenProperties", "EnvelopeSpecTargetNamespaces,DocumentSpecTargetNamespaces,TargetCodePage")})), 0);
			}
			this.AddComponent(stage, comp2);
			stage = this.AddStage(new System.Guid("9d0e4108-4cce-4536-83fa-4a5040674ad6"), Microsoft.BizTalk.PipelineOM.ExecutionMode.all);
			Microsoft.BizTalk.Component.Interop.IBaseComponent comp3 = Microsoft.BizTalk.PipelineOM.PipelineManager.CreateComponent("Be.Stateless.BizTalk.Component.MicroPipelineComponent, Be.Stateless.BizTalk.Pipeline.Components, Version=2.0.0.0, Culture=neutral, PublicKeyToken=3707daa0b119fc14");
			if (comp3.GetType().IsInstanceOfType(typeof(Microsoft.BizTalk.Component.Interop.IPersistPropertyBag)))
			{
				((Microsoft.BizTalk.Component.Interop.IPersistPropertyBag)(comp3)).Load(new Microsoft.BizTalk.PipelineEditor.PropertyBag(new System.Collections.ArrayList(new Microsoft.BizTalk.PipelineEditor.PropertyContents[] {
									new Microsoft.BizTalk.PipelineEditor.PropertyContents("Enabled", true),
									new Microsoft.BizTalk.PipelineEditor.PropertyContents("Components", "")})), 0);
			}
			this.AddComponent(stage, comp3);
		}

		public override string XmlContent
		{
			get
			{
				return _strPipeline;
			}
		}

		private const string _strPipeline = @"<?xml version='1.0' encoding='utf-16'?>
<Document xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance' xmlns:xsd='http://www.w3.org/2001/XMLSchema' MajorVersion='1' MinorVersion='0'>
  <Description>XML send micro-pipeline.</Description>
  <CategoryId>8c6b051c-0ff5-4fc2-9ae5-5016cb726282</CategoryId>
  <FriendlyName>Transmit</FriendlyName>
  <Stages>
    <Stage>
      <PolicyFileStage _locAttrData='Name' _locID='1' Name='Pre-Assemble' minOccurs='0' maxOccurs='-1' execMethod='All' stageId='9d0e4101-4cce-4536-83fa-4a5040674ad6' />
      <Components>
        <Component>
          <Name>Be.Stateless.BizTalk.Component.FailedMessageRoutingEnablerComponent, Be.Stateless.BizTalk.Pipeline.Components, Version=2.0.0.0, Culture=neutral, PublicKeyToken=3707daa0b119fc14</Name>
          <ComponentName>FailedMessageRoutingEnablerComponent</ComponentName>
          <Description>Enables routing of failed messages and prevents routing failure reports from being generated.</Description>
          <Version>2.0</Version>
          <Properties>
            <Property Name='Enabled'>
              <Value xsi:type='xsd:boolean'>true</Value>
            </Property>
            <Property Name='EnableFailedMessageRouting'>
              <Value xsi:type='xsd:boolean'>true</Value>
            </Property>
            <Property Name='SuppressRoutingFailureReport'>
              <Value xsi:type='xsd:boolean'>true</Value>
            </Property>
          </Properties>
          <CachedDisplayName>FailedMessageRoutingEnablerComponent</CachedDisplayName>
          <CachedIsManaged>true</CachedIsManaged>
        </Component>
        <Component>
          <Name>Be.Stateless.BizTalk.Component.MicroPipelineComponent, Be.Stateless.BizTalk.Pipeline.Components, Version=2.0.0.0, Culture=neutral, PublicKeyToken=3707daa0b119fc14</Name>
          <ComponentName>MicroPipelineComponent</ComponentName>
          <Description>Runs a sequence of micro components as if they were regular pipeline components.</Description>
          <Version>2.0</Version>
          <Properties>
            <Property Name='Enabled'>
              <Value xsi:type='xsd:boolean'>true</Value>
            </Property>
            <Property Name='Components'>
              <Value xsi:type='xsd:string' />
            </Property>
          </Properties>
          <CachedDisplayName>MicroPipelineComponent</CachedDisplayName>
          <CachedIsManaged>true</CachedIsManaged>
        </Component>
      </Components>
    </Stage>
    <Stage>
      <PolicyFileStage _locAttrData='Name' _locID='2' Name='Assemble' minOccurs='0' maxOccurs='1' execMethod='All' stageId='9d0e4107-4cce-4536-83fa-4a5040674ad6' />
      <Components>
        <Component>
          <Name>Microsoft.BizTalk.Component.XmlAsmComp, Microsoft.BizTalk.Pipeline.Components, Version=3.0.1.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35</Name>
          <ComponentName>XML assembler</ComponentName>
          <Description>XML assembler component.</Description>
          <Version>1.0</Version>
          <Properties>
            <Property Name='EnvelopeDocSpecNames'>
              <Value xsi:type='xsd:string' />
            </Property>
            <Property Name='EnvelopeSpecTargetNamespaces'>
              <Value xsi:type='xsd:string' />
            </Property>
            <Property Name='DocumentSpecNames'>
              <Value xsi:type='xsd:string' />
            </Property>
            <Property Name='DocumentSpecTargetNamespaces'>
              <Value xsi:type='xsd:string' />
            </Property>
            <Property Name='XmlAsmProcessingInstructions'>
              <Value xsi:type='xsd:string' />
            </Property>
            <Property Name='ProcessingInstructionsOptions'>
              <Value xsi:type='xsd:int'>0</Value>
            </Property>
            <Property Name='ProcessingInstructionsScope'>
              <Value xsi:type='xsd:int'>0</Value>
            </Property>
            <Property Name='AddXmlDeclaration'>
              <Value xsi:type='xsd:boolean'>true</Value>
            </Property>
            <Property Name='TargetCharset'>
              <Value xsi:type='xsd:string' />
            </Property>
            <Property Name='TargetCodePage'>
              <Value xsi:type='xsd:int'>0</Value>
            </Property>
            <Property Name='PreserveBom'>
              <Value xsi:type='xsd:boolean'>true</Value>
            </Property>
            <Property Name='HiddenProperties'>
              <Value xsi:type='xsd:string'>EnvelopeSpecTargetNamespaces,DocumentSpecTargetNamespaces,TargetCodePage</Value>
            </Property>
          </Properties>
          <CachedDisplayName>XML assembler</CachedDisplayName>
          <CachedIsManaged>true</CachedIsManaged>
        </Component>
      </Components>
    </Stage>
    <Stage>
      <PolicyFileStage _locAttrData='Name' _locID='3' Name='Encode' minOccurs='0' maxOccurs='-1' execMethod='All' stageId='9d0e4108-4cce-4536-83fa-4a5040674ad6' />
      <Components>
        <Component>
          <Name>Be.Stateless.BizTalk.Component.MicroPipelineComponent, Be.Stateless.BizTalk.Pipeline.Components, Version=2.0.0.0, Culture=neutral, PublicKeyToken=3707daa0b119fc14</Name>
          <ComponentName>MicroPipelineComponent</ComponentName>
          <Description>Runs a sequence of micro components as if they were regular pipeline components.</Description>
          <Version>2.0</Version>
          <Properties>
            <Property Name='Enabled'>
              <Value xsi:type='xsd:boolean'>true</Value>
            </Property>
            <Property Name='Components'>
              <Value xsi:type='xsd:string' />
            </Property>
          </Properties>
          <CachedDisplayName>MicroPipelineComponent</CachedDisplayName>
          <CachedIsManaged>true</CachedIsManaged>
        </Component>
      </Components>
    </Stage>
  </Stages>
</Document>";

		public override System.Guid VersionDependentGuid
		{
			get
			{
				return new System.Guid(_versionDependentGuid);
			}
		}

		private const string _versionDependentGuid = "e2accc02-8f10-459c-b214-0a9d91cf0f66";
	}
}
